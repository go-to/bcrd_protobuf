syntax = "proto3";

package bcrd;

option go_package = "github.com/go-to/bcrd_protobuf/pb";

enum SearchType {
  SEARCH_TYPE_IN_CURRENT_SALES = 0;
  SEARCH_TYPE_NOT_YET = 1;
  SEARCH_TYPE_IRREGULAR_HOLIDAY = 2;
}

enum SortOrderType {
  SORT_ORDER_NO = 0;
  SORT_ORDER_DISTANCE = 1;
}

message Date {
  int32 year = 1;
  int32 month = 2;
  int32 day = 3;
}

message Event {
  int64 id = 1;
  string name = 2;
  int32 year = 3;
  Date start_date = 4;
  Date end_date = 5;
}

message Shop {
  int64 id = 1;
  int64 event_id = 2;
  int32 year = 3;
  int32 no = 4;
  string shop_name = 5;
  string image_url = 6;
  string google_url = 7;
  string tabelog_url = 8;
  string official_url = 9;
  string instagram_url = 10;
  string address = 11;
  string business_days = 12;
  string regular_holiday = 13;
  bool is_open_holiday = 14;
  bool is_irregular_holiday = 15;
  double latitude = 16;
  double longitude = 17;
  string distance = 18;
  int32 week_number = 19;
  int32 day_of_week = 20;
  string start_time = 21;
  string end_time = 22;
  bool is_holiday = 23;
  bool in_current_sales = 24;
  bool is_stamped = 25;
  int32 number_of_times = 26;
}

message ShopLocation {
  int64 id = 1;
  int64 shop_id = 2;
  double latitude = 3;
  double longitude = 4;
  string location = 5;
}

message ShopTime {
  int64 id = 1;
  int64 shop_id = 2;
  int32 week_number = 3;
  int32 day_of_week = 4;
  string start_time = 5;
  string end_time = 6;
  bool is_holiday = 7;
}

message ShopsTotalRequest {
  int32 year = 1;
}

message ShopsTotalResponse {
  int64 total_num = 1;
}

message ShopsRequest {
  repeated SearchType search_types = 1;
  string user_id = 2;
  string keyword = 3;
  int32 year = 4;
  SortOrderType sort_order = 5;
  double latitude = 6;
  double longitude = 7;
}

message ShopsResponse {
  repeated Shop shops = 1;
}

message ShopRequest {
  string user_id = 1;
  int64 shop_id = 2;
}

message ShopResponse {
  Shop shop = 1;
  bool is_event_period = 2;
}

message StampRequest {
  string user_id = 1;
  int64 shop_id = 2;
}

message StampResponse {
  int32 number_of_times = 1;
}

message MergeUserStampRequest {
  string user_id = 1;
  string anonymous_user_id = 2;
}

message MergeUserStampResponse {
  int32 stamp_num = 1;
}

service BcrdService {
  // 店舗総数取得
  rpc GetShopsTotal (ShopsTotalRequest) returns (ShopsTotalResponse);
  // 店舗情報取得
  rpc GetShops (ShopsRequest) returns (ShopsResponse);
  // 店舗情報取得
  rpc GetShop (ShopRequest) returns (ShopResponse);
  // スタンプ追加
  rpc AddStamp (StampRequest) returns (StampResponse);
  // スタンプ削除
  rpc DeleteStamp (StampRequest) returns (StampResponse);
  // ユーザーログイン
  rpc MergeUserStamp (MergeUserStampRequest) returns (MergeUserStampResponse);
}
