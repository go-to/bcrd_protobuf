syntax = "proto3";

package egp;

option go_package = "github.com/go-to/egp_protobuf/pb";

enum CategoryType {
  CATEGORY_TYPE_NONE = 0;
  CATEGORY_TYPE_EBISU_1 = 1;
  CATEGORY_TYPE_EBISU_2 = 2;
  CATEGORY_TYPE_EBISU_WEST = 3;
  CATEGORY_TYPE_EBISU_SOUTH = 4;
  CATEGORY_TYPE_BEER_COCKTAIL = 5;
}

enum SearchType {
  SEARCH_TYPE_IN_CURRENT_SALES = 0;
  SEARCH_TYPE_NOT_YET = 1;
  SEARCH_TYPE_IRREGULAR_HOLIDAY = 2;
  SEARCH_TYPE_NEEDS_RESERVATION = 3;
  SEARCH_TYPE_BEER_COCKTAIL = 4;
}

enum SortOrderType {
  SORT_ORDER_NO = 0;
  SORT_ORDER_DISTANCE = 1;
}

message Date {
  int32 year = 1;
  int32 month = 2;
  int32 day = 3;
}

message Event {
  int64 id = 1;
  string name = 2;
  int32 year = 3;
  Date start_date = 4;
  Date end_date = 5;
}

message Category {
  int64 id = 1;
  string name = 2;
}

message Categories {
  repeated Category categories = 1;
}

message BeerType {
  int64 id = 1;
  string name = 2;
}

message BeerTypes {
  repeated BeerType beer_types = 1;
}

message Shop {
  int64 id = 1;
  int64 event_id = 2;
  int32 year = 34;
  CategoryType category_id = 3;
  string category_name = 35;
  int32 no = 4;
  string shop_name = 5;
  string menu_name = 6;
  string menu_image_url = 36;
  string phone = 7;
  string address = 8;
  string business_days = 9;
  string regular_holiday = 10;
  string business_hours = 11;
  string charge_price = 12;
  int32 normalized_charge_price = 13;
  string single_price = 14;
  int32 normalized_single_price = 15;
  string set_price = 16;
  int32 normalized_set_price = 17;
  string beer_type = 18;
  string needs_reservation = 19;
  bool normalized_needs_reservation = 20;
  string use_hachipay = 21;
  bool normalized_use_hachipay = 22;
  bool is_open_holiday = 23;
  bool is_irregular_holiday = 24;
  double latitude = 25;
  double longitude = 26;
  string distance = 27;
  int32 week_number = 28;
  int32 day_of_week = 29;
  string start_time = 30;
  string end_time = 31;
  bool is_holiday = 32;
  bool in_current_sales = 33;
  bool is_stamped = 37;
  int32 number_of_times = 38;
}

message ShopLocation {
  int64 id = 1;
  int64 shop_id = 2;
  double latitude = 3;
  double longitude = 4;
  string location = 5;
}

message ShopTime {
  int64 id = 1;
  int64 shop_id = 2;
  int32 week_number = 3;
  int32 day_of_week = 4;
  string start_time = 5;
  string end_time = 6;
  bool is_holiday = 7;
}

message ShopsTotalRequest {
  int32 year = 1;
}

message ShopsTotalResponse {
  int64 total_num = 1;
}

message ShopsRequest {
  repeated SearchType search_types = 1;
  string user_id = 2;
  string keyword = 3;
  int32 year = 4;
  SortOrderType sort_order = 5;
  double latitude = 6;
  double longitude = 7;
}

message ShopsResponse {
  repeated Shop shops = 1;
}

message ShopRequest {
  string user_id = 1;
  int64 shop_id = 2;
}

message ShopResponse {
  Shop shop = 1;
}

message StampRequest {
  string user_id = 1;
  int64 shop_id = 2;
}

message StampResponse {
  int32 number_of_times = 1;
}

service EgpService {
  // 店舗総数取得
  rpc GetShopsTotal (ShopsTotalRequest) returns (ShopsTotalResponse);
  // 店舗情報取得
  rpc GetShops (ShopsRequest) returns (ShopsResponse);
  // 店舗情報取得
  rpc GetShop (ShopRequest) returns (ShopResponse);
  // スタンプ追加
  rpc AddStamp (StampRequest) returns (StampResponse);
  // スタンプ削除
  rpc DeleteStamp (StampRequest) returns (StampResponse);
}
